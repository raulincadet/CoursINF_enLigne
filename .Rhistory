x<-c(2,3,5,7)
if(x<4){
print(x)
}
if(x<4){
y=x
}
y
x<-2:12
x
# si x est inferieur à 6, y=x+1
# dans le cas contraire, y=x
# ifelse(condition,vrai,fausse)
y=ifelse(x<6,x+1,x)
y
z<-sample(10)
z
x<-2:12
x
# si x est inferieur a 6, y=x+1
# dans le cas contraire, y=x
# ifelse(condition,vrai,fausse)
y=ifelse(x<6,x+1,x)
y
z
20%/%2
# creation d'un vecteur p ou p est egale a 1 si z est un nombre pair,
# et 0 dans le cas contraire
p<-ifelse(z%%2,1,0)
p
# creation de m ou m indique les multiples de 2 et de 3
m<-ifelse(z%%2,'Multiple de 2',
ifelse(z%%3,'Multiple de 3',"Ni l'un, ni l'autre"))
m
z
# creation de m ou m indique les multiples de 2 et de 3
m<-ifelse(z%%2==0,'Multiple de 2',
ifelse(z%%3==0,'Multiple de 3',"Ni l'un, ni l'autre"))
m
z
######################################################################
# creation d'une variable binaire ou u est egale a 0 si z est inferieur
# ou egale a 5. Dans le contraire, u est egale a 1.
u<-ifelse(z%%2==0,1,0)
u
######################################################################
# creation d'une variable binaire ou u est egale a 0 si z est inferieur
# ou egale a 5. Dans le contraire, u est egale a 1.
u<-ifelse(z<=5,1,0)
u
z
######################################################################
# creation de n ou n indique les multiples de 2, multiples de 3,
# multiples de 2 et 3 a la fois.
n<-ifelse(z%%2==0 & z%%3==0,"Multiple de 2 et 3",
ifelse(z%%2==0,"Multiple de 2",
ifelse(z%%3==0,"Multiple de 3","Ni l'un, ni l'autre")))
n
z
age<-abs(rnorm(50,m=20,sd=7));age
age<-abs(rnorm(50,m=20,sd=10));age
age<-abs(rnorm(50,m=25,sd=15));age
age<-abs(rnorm(50,m=25,sd=15));age
age<-round(abs(rnorm(50,m=25,sd=15)));age
library(xlsx)
write.xlsx(age,'Age.xlsx',sheetName = 'Age')
library(xslx)
read.xlsx('Age.xlsx')
read.xlsx('Age.xlsx',sheetName = 'Age')
df=read.xlsx('Age.xlsx',sheetName = 'Age')
View(df)
#########################333
categ<-ifelse(df$Age<18,'Enfant','Audulte')
# Creer un objet qui scinde les gens en deux categories:
# les enfants: 0 - 18 ans
# les adultes: 18 ans et plus
categ<-ifelse(df$Age<18,'Enfant','Adulte')
categ
# on peut ajouter le nouvel objet dans le data frame
df['categorie']<-ifelse(df$Age<18,'Enfant','Adulte')
df['Kategori']<-categ
df[catLarge]<-ifelse(df$Age<=3,'Bébé',
ifelse(df$Age<=8,'Enfant',
ifelse(df$Age<=11,'Pré-ado',
ifelse(df$Age<=15,'Adolescent',
ifelse(df$Age<=25,'Jeune','Adulte')))))
df['catLarge']<-ifelse(df$Age<=3,'Bébé',
ifelse(df$Age<=8,'Enfant',
ifelse(df$Age<=11,'Pré-ado',
ifelse(df$Age<=15,'Adolescent',
ifelse(df$Age<=25,'Jeune','Adulte')))))
# calcul des frequences
table(df$catLarge)
df['Isabelle']<-ifelse(df$Age>=26,'Adulte',
ifelse(df$Age>=16,'Jeune',
ifelse(df$Age>=12,'Adolescent',
ifelse(df$Age>=9,'Pré-ado',
ifelse(df$Age>=4,'Enfant','Bébé')))))
# calcul des frequences
table(df$catLarge)
table(df$Isabelle)
# creation d'une fonction qui compte de 1 a 10. Cette fonction n'aura pas d'argument
agusto<-function(){
y=1:10
return(y)
}
agusto()
# creation d'une fonction qui ajoute 2 a chacun des elements d'un vecteur de donnees numeriques
s=c(3,6,4,1,2)
pierry<-function(x){
y=x+2
return(y)
}
pierry(s)
# creation d'une fonction qui compte par deux, de 2 a 10. Le resultat sera: 2,4,6,8,10.
paire<-function(){
y=seq(from=2,to=10,by=2)
}
paire()
# creation d'une fonction qui compte par deux, de 2 a 10. Le resultat sera: 2,4,6,8,10.
paire<-function(){
y=seq(from=2,to=10,by=2)
return(y)
}
paire()
# creation d'une fonction qui compte par deux, de 2 a 10. Le resultat sera: 2,4,6,8,10.
compter2<-function(){
y=seq(from=2,to=10,by=2)
return(y)
}
compter2()
###################################################
# creation d'une fonction qui indique pour chacun des elements d'un vecteur s'il
# s'agit d'un nombre pair ou non.
nombrePair<-function(x){
y=ifelse(x%%2==0,'Pair','Impair')
return(y)
}
nombrePair(s)
s
1:3*1:5
install.packages("slidify")
devtools::install_github('slidify','ramnathv')
devtools::install_github('slidify/ramnathv')
devtools::install_github('slidify\ramnathv')
devtools::install_github('ramnathv/slidify')
library(glue)
remove.packages("glue", lib="~/R/win-library/3.6")
devtools::install_github('ramnathv/slidify')
devtools::install_github('ramnathv/slidify')
install.packages("glue")
devtools::install_github('ramnathv/slidify')
library(slidify)
unlink('Untitled/Untitled_cache', recursive = TRUE)
unlink('Untitled/Untitled_cache', recursive = TRUE)
rmarkdown::shiny_prerendered_clean('Untitled/Untitled.Rmd')
unlink('Untitled/Untitled_cache', recursive = TRUE)
rmarkdown::shiny_prerendered_clean('Untitled/Untitled.Rmd')
library(shiny)
library(learnr)
library(shiny)
library(learnr)
library(learnr)
library(learnr)
learnr::quiz
x<-35:100
print(x)
z<-seq(from=24,to=35,by=2)
print(z)
z<-seq(from=24,to=80,by=2)
print(z)
x<-30:15
print(x)
print(u)
u<-30:15
print(u)
v<-seq(from=15,to=1,by=3)
v<-seq(from=15,to=1,by=-3)
print(v)
v<-seq(from=25,to=1,by=-3)
print(v)
unlink('Exercices1/Exercices1_cache', recursive = TRUE)
rmarkdown::shiny_prerendered_clean('Exercices1/Exercices1.Rmd')
